plugins {
    id "com.gorylenko.gradle-git-properties" version "2.3.1"
    id "com.palantir.docker" version "0.30.0"
    id 'org.springframework.boot' version '2.5.5'
}

jar {
    archivesBaseName = rootProject.name + "-" + project.name
    enabled = false
}

springBoot {
    buildInfo()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-parameter-store-config:2.3.2'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.3.2'

    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
    implementation 'org.flywaydb:flyway-core:8.0.0'

    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'org.postgresql:postgresql:42.2.24.jre7'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

ext.repository = System.getenv('DOCKER_REPOSITORY') ?: jar.getArchiveBaseName().getOrNull()

docker {
    dependsOn bootJar
    name "${repository}:latest"
    tag 'ECR', "${repository}:${version}"
    files bootJar.archiveFile.getOrNull()
}

sonarqube {
    properties {
        property "sonar.projectKey", "${rootProject.name}:${project.name}"
    }
}